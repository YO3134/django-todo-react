[{"/Users/ootaki/Project/django-todo-react/frontend/src/reportWebVitals.js":"1","/Users/ootaki/Project/django-todo-react/frontend/src/App.js":"2","/Users/ootaki/Project/django-todo-react/frontend/src/index.js":"3","/Users/ootaki/Project/django-todo-react/frontend/src/components/Modal.js":"4"},{"size":362,"mtime":1606454103253,"results":"5","hashOfConfig":"6"},{"size":4535,"mtime":1606567923219,"results":"7","hashOfConfig":"6"},{"size":559,"mtime":1606454103251,"results":"8","hashOfConfig":"6"},{"size":2723,"mtime":1606564965777,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"alvrdj",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"/Users/ootaki/Project/django-todo-react/frontend/src/reportWebVitals.js",[],"/Users/ootaki/Project/django-todo-react/frontend/src/App.js",[],"/Users/ootaki/Project/django-todo-react/frontend/src/index.js",[],"/Users/ootaki/Project/django-todo-react/frontend/src/components/Modal.js",["19"],"import React, { Component } from \"react\";\nimport {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    From,\n    Input,\n    Label,\n    Form,\n    FormGroup,\n}  from \"reactstrap\";\n\nexport default class CustomModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            activeItem: this.props.activeItem\n        };\n    }\n    handleChange = e => {\n        let { name, value } = e.target;\n        if (e.target.type === \"checkbox\") {\n            value = e.target.checked;\n        }\n        const activeItem = { ...this.state.activeItem, [name]: value };\n        this.setState({ activeItem });\n    };\n    render() {\n        const { toggle, onSave } = this.props;\n        return (\n            <Modal isOpen={true} toggle={toggle}>\n                <ModalHeader toggle={toggle}> Todo Item </ModalHeader>\n                <ModalBody>\n                    <Form>\n                        <FormGroup>\n                            <Label for=\"title\">Title</Label>\n                            <Input\n                              type=\"text\"\n                              name=\"title\"\n                              value={this.state.activeItem.title}\n                              onChange={this.handleChange}\n                              placeholder=\"Enter Todo Title\"\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"description\">Description</Label>\n                            <Input\n                              type=\"text\"\n                              name=\"description\"\n                              value={this.state.activeItem.description}\n                              onChange={this.handleChange}\n                              placeholder=\"Enter Todo description\"\n                            />\n                        </FormGroup>\n                        <FormGroup check>\n                            <Label for=\"completed\">\n                                <Input\n                                  type=\"checkbox\"\n                                  name=\"completed\"\n                                  checked={this.state.activeItem.completed}\n                                  onChange={this.handleChange}\n                                />\n                                Completed\n                            </Label>\n                        </FormGroup>\n                    </Form>\n                </ModalBody>\n                <ModalFooter>\n                    <Button color=\"success\" onClick={() => onSave(this.state.activeItem)}>\n                        Save\n                    </Button>\n                </ModalFooter>\n            </Modal>\n        );\n    }\n}",{"ruleId":"20","severity":1,"message":"21","line":8,"column":5,"nodeType":"22","messageId":"23","endLine":8,"endColumn":9},"no-unused-vars","'From' is defined but never used.","Identifier","unusedVar"]