[{"/Users/ootaki/Project/django-todo-react/frontend/src/reportWebVitals.js":"1","/Users/ootaki/Project/django-todo-react/frontend/src/App.js":"2","/Users/ootaki/Project/django-todo-react/frontend/src/index.js":"3"},{"size":362,"mtime":1606357480104,"results":"4","hashOfConfig":"5"},{"size":2725,"mtime":1606379387537,"results":"6","hashOfConfig":"5"},{"size":559,"mtime":1606369844195,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"alvrdj",{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ootaki/Project/django-todo-react/frontend/src/reportWebVitals.js",[],"/Users/ootaki/Project/django-todo-react/frontend/src/App.js",["15"],"import React, { Component } from \"react\";\nconst todoItems = [\n  {\n    id: 1,\n    title: \"Go to Market\",\n    description: \"Buy ingredients to prepare dinner\",\n    completed: true\n  },\n  {\n    id: 2,\n    title: \"Study\",\n    description: \"Read Algebra and History textbook for upcoming test\",\n    completed: false\n  },\n  {\n    id: 3,\n    title: \"Sally's books\",\n    description: \"Go to library to rent sally's books\",\n    completed: true\n  },\n  {\n    id: 4,\n    title: \"Article\",\n    description: \"Write article on how to use django with react\",\n    completed: false\n  }\n];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      viewCompleted: false,\n      todoList: todoItems\n    };\n  }\n  displayCompleted = status => {\n    if (status) {\n      return this.setState({ viewCompleted: true });\n    }\n    return this.setState({ viewCompleted: false });\n  };\n  renderTabList = () => {\n    return (\n      <div className=\"my-5 tab-list\">\n        <span\n          onClick={() => this.displayCompleted(true)}\n          className={ this.state.viewCompleted ? \"active\" : \"\"}\n        >\n          complete\n        </span>\n        <span\n          onClick={() => this.displayCompleted(false)}\n          className={ this.state.viewCompleted ? \"\" : \"active\"}\n        >\n          Incomplete\n        </span>\n      </div>\n    );\n  };\n  renderItems = () => {\n    const { viewCompleted } = this.state;\n    const newItems = this.state.todoList.filter(\n      item => item.completed == viewCompleted\n    );\n    return newItems.map(item => (\n      <li \n        key={item.id}\n        className=\"list-group-item d-flex justify-content-between align-items-center\"\n      >\n        <span\n          className={`todo-titile mr-2 ${\n            this.state.viewCompleted ? \"completed-todo\" : \"\"\n          }`}\n          title={item.description}\n        >\n          {item.title}\n        </span>\n        <span>\n          <button className=\"btn btn-secondary mr-2\">Edit</button>\n          <button className=\"btn btn-danger\">Delete</button>\n        </span>\n      </li>\n    ));\n  };\n  render() {\n    return (\n      <main className=\"content\">\n        <h1 className=\"text-white text-uppercase text-center my-4\">Todo app</h1>\n        <div className=\"row\">\n          <div className=\"col-md-6 col-sm-10 mx-auto p-0\">\n            <div className=\"card p-3\">\n              <div className=\"\">\n                <button className=\"btn btn-primary\">Add task</button>\n              </div>\n              { this.renderTabList()}\n              <ul className=\"list-group list-group-flush\">\n                { this.renderItems()}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </main>\n    );\n  }\n}\nexport default App;","/Users/ootaki/Project/django-todo-react/frontend/src/index.js",[],{"ruleId":"16","severity":1,"message":"17","line":64,"column":30,"nodeType":"18","messageId":"19","endLine":64,"endColumn":32},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]